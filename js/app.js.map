{"version":3,"file":"_public/js/app.js","sources":["app/app.coffee","app/fixtures/userFixture.coffee","app/mocks/userMock.coffee","app/scripts/controllers.coffee","app/scripts/repositories.coffee"],"names":[],"mappings":"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","sourcesContent":["'use strict'\n\n# Declare app level module which depends on filters, and services\nangular.module('app.mocks', [])\nangular.module('app.fixtures', [])\nangular.module('app.repos', [])\n\nApp = angular.module('app', [\n  'ngCookies'\n  'ngResource'\n  'ngRoute'\n  'ngMockE2E'\n  'app.controllers'\n  'app.fixtures'\n  'app.mocks'\n  'app.repos'\n  'partials'\n])\n\nApp.run ['$httpBackend','UserMock','$q', ($httpBackend, $UserMock, $q) -> \n  \n\n  #Route for GET /api/user/\n  $httpBackend.whenGET('/api/user').respond($UserMock.getActiveUser())\n\n  #Route for GET /api/users/total\n  $httpBackend.whenGET('/api/user/lastLogin').respond($UserMock.getLastLogin())\n\n\n  # Route for GET /api/user/:id\n  $httpBackend.whenGET(/\\/api\\/user\\/(\\d+)$/).respond (method, url, data, header) ->\n    id = url.match(/(\\d+)$/)[0]\n    data = $UserMock.getUserById(id)\n    console.log 'data:',data\n    return [\n      200, # status code\n      data # data object\n    ]\n\n  # Route for POST /api/user/update\n  $httpBackend.whenPOST('/api/user/update').respond (method, url, data, header) ->\n    return [200, $UserMock.saveUser(data) ]\n]\n\nApp.config([\n  '$routeProvider'\n  '$locationProvider'\n\n($routeProvider, $locationProvider, config) ->\n\n  $routeProvider\n\n    .when('/mock/:id', {\n      templateUrl: '/partials/userPartial.html', \n      controller: 'UserMockController'\n    })\n    .when('/fixture', {\n      templateUrl: '/partials/userPartial.html'\n      controller: 'UserFixtureController'\n    })\n\n    # Catch all\n    .otherwise({redirectTo: '/mock/1234'})\n\n  # Without server side support html5 must be disabled.\n  $locationProvider.html5Mode(false)\n])\n","fixtures = angular.module('app.fixtures')\n.factory 'UserFixture', ->\n\treturn {\n\t\tgetUser: -> \n\t\t\tfirstName: 'Jeremy'\n\t\t\tlastName: 'Dowell'\n\t\t\ttwitter: 'codevinsky'\n\t\t\tid: Math.floor(Math.random() * 100)\n\t\tgetLastLogin: ->\n\t\t\treturn new Date()\n\t}","mocks = angular.module('app.mocks')\n.factory 'UserMock', ->\n\t@user = \n\t\tfirstName: 'Jeremy'\n\t\tlastName: 'Dowell'\n\t\ttwitter: 'codevinsky'\n\t\tid: Math.floor( Math.random() * 100 )\n\treturn {\n\t\tgetActiveUser: =>\n\t\t\tconsole.log 'getting active user'\n\t\t\treturn @user\n\t\tgetUserById: (id) =>\n\t\t\tconsole.log 'getting user by id:', id\n\t\t\t@user.id = id\n\t\t\treturn @user\n\t\tgetLastLogin:  ->\n\t\t\tconsole.log 'getting last login'\n\t\t\treturn { lastLogin: new Date() }\n\t\tsaveUser: (data) =>\n\t\t\t@user = data\n\t\t\tconsole.log 'saving user:', @user\n\t\t\treturn @user\n\t}","'use strict'\n\n### Controllers ###\n\nangular.module('app.controllers', [])\n\n.controller('AppCtrl', [\n  '$scope'\n  '$location'\n  '$resource'\n  '$rootScope'\n\n($scope, $location, $resource, $rootScope) ->\n  $scope.$location = $location\n  $scope.$watch('$location.path()', (path) ->\n    $scope.activeNavId = path || '/'\n  )\n  $scope.getClass = (id) ->\n    if $scope.activeNavId.substring(0, id.length) == id\n      return 'active'\n    else\n      return ''\n])\n\n.controller('UserFixtureController', [\n  '$scope'\n  'UserFixture'\n  ($scope,$UserFixture) ->\n    $scope.method = \"Fixture\"\n    $scope.user = $UserFixture.getUser();\n    $scope.lastLogin = $UserFixture.getLastLogin()\n    $scope.canEdit = false;\n])\n\n.controller('UserMockController', [\n  '$scope'\n  '$routeParams'\n  'UserRepository'\n  ($scope, $routeParams, $UserRepository) ->\n    $scope.method = \"$httpBackend\"\n    $scope.canEdit = true\n\n    $UserRepository.getActiveUser().then (response) ->\n      console.log 'got active user:', response\n    $UserRepository.getUserById($routeParams.id).then (response) ->\n      console.log 'got user:', response\n      $scope.user = response.data\n\n    $UserRepository.getLastLogin().then (response) ->\n      console.log 'got user count:', response\n      $scope.lastLogin = response.data.lastLogin\n\n    $scope.update = ->\n      $UserRepository.saveUser($scope.user).then (response) ->\n        console.log 'saved user:', response\n])\n\n","'use strict'\n\n### Sevices ###\nangular.module('app.repos')\n.factory 'UserRepository', ['$http', ($http) ->\n\tgetActiveUser: ->\n\t\t$http.get('/api/user')\n\tgetLastLogin: ->\n\t\t$http.get('/api/user/lastLogin')\n\tgetUserById: (id) ->\n\t\t$http.get('/api/user/' + id)\n\tsaveUser: (user) ->\n\t\t$http.post('/api/user/update', user)\n\n\n]"]}